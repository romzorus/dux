workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "dev"

variables:
  DUX_VERSION: "0.0.11"

stages:
  - build
  - deploy

build-duxtool-for-debian:
  stage: build
  image: romzorus/deb-rust-build:v1.0
  script:
   - cargo build --release
   - sed -i "s/PLACEHOLDER_FOR_VERSION/$DUX_VERSION/g" building/deb/duxtool/DEBIAN/control
   - mkdir -p building/deb/duxtool/usr/bin
   - mkdir -p building/deb/duxtool/etc/dux
   - cp target/release/all-in-one-worker building/deb/duxtool/usr/bin/duxtool
   - cp building/conf/dux.conf.all_in_one building/deb/duxtool/etc/dux/dux.conf
   - chmod -R 755 building/deb/duxtool
   - dpkg-deb --build building/deb/duxtool
   - mv building/deb/duxtool.deb building/deb/duxtool-$DUX_VERSION.deb
  artifacts:
    paths:
    - building/deb/duxtool-$DUX_VERSION.deb

build-duxtool-for-fedora:
  stage: build
  image: romzorus/rpm-rust-build:v1.0
  script:
   - cargo build --release
   - sed -i "s/PLACEHOLDER_FOR_VERSION/$DUX_VERSION/g" building/rpm/dux.spec
   - cp building/rpm/dux.spec ~/rpmbuild/SPECS
   - mkdir ~/rpmbuild/BUILDROOT/duxtool-$DUX_VERSION-0.x86_64/
   - cp target/release/all-in-one-worker ~/rpmbuild/BUILD/duxtool
   - cp building/conf/dux.conf.all_in_one ~/rpmbuild/BUILD/dux.conf
   - rpmbuild -bb ~/rpmbuild/SPECS/dux.spec
   - cp ~/rpmbuild/RPMS/x86_64/duxtool-$DUX_VERSION-0.x86_64.rpm duxtool-$DUX_VERSION.rpm
  artifacts:
    paths:
    - duxtool-$DUX_VERSION.rpm

build-dux-controller-for-debian:
  stage: build
  image: romzorus/deb-rust-build:v1.0
  script:
   - cargo build --release
   - sed -i "s/PLACEHOLDER_FOR_VERSION/$DUX_VERSION/g" building/deb/dux-controller/DEBIAN/control
   - mkdir -p building/deb/dux-controller/usr/bin
   - mkdir -p building/deb/dux-controller/etc/dux
   - cp target/release/controller building/deb/dux-controller/usr/bin/dux-controller
   - cp building/conf/dux.conf.controller building/deb/dux-controller/etc/dux/dux.conf
   - chmod -R 755 building/deb/dux-controller
   - dpkg-deb --build building/deb/dux-controller
   - mv building/deb/dux-controller.deb building/deb/dux-controller-$DUX_VERSION.deb
  artifacts:
    paths:
    - building/deb/dux-controller-$DUX_VERSION.deb

build-dux-controller-for-fedora:
  stage: build
  image: romzorus/rpm-rust-build:v1.0
  script:
   - cargo build --release
   - sed -i "s/PLACEHOLDER_FOR_VERSION/$DUX_VERSION/g" building/rpm/dux-controller.spec
   - cp building/rpm/dux-controller.spec ~/rpmbuild/SPECS
   - mkdir ~/rpmbuild/BUILDROOT/dux-controller-$DUX_VERSION-0.x86_64/
   - cp target/release/controller ~/rpmbuild/BUILD/dux-controller
   - cp building/conf/dux.conf.controller ~/rpmbuild/BUILD/dux.conf
   - rpmbuild -bb ~/rpmbuild/SPECS/dux-controller.spec
   - cp ~/rpmbuild/RPMS/x86_64/dux-controller-$DUX_VERSION-0.x86_64.rpm dux-controller-$DUX_VERSION.rpm
  artifacts:
    paths:
    - dux-controller-$DUX_VERSION.rpm

build-dux-worker-for-debian:
  stage: build
  image: romzorus/deb-rust-build:v1.0
  script:
   - cargo build --release
   - sed -i "s/PLACEHOLDER_FOR_VERSION/$DUX_VERSION/g" building/deb/dux-worker/DEBIAN/control
   - mkdir -p building/deb/dux-worker/usr/bin
   - mkdir -p building/deb/dux-worker/etc/dux
   - cp target/release/worker building/deb/dux-worker/usr/bin/dux-worker
   - cp building/conf/dux.conf.worker building/deb/dux-worker/etc/dux/dux.conf
   - chmod -R 755 building/deb/dux-worker
   - dpkg-deb --build building/deb/dux-worker
   - mv building/deb/dux-worker.deb building/deb/dux-worker-$DUX_VERSION.deb
  artifacts:
    paths:
    - building/deb/dux-worker-$DUX_VERSION.deb

build-dux-worker-for-fedora:
  stage: build
  image: romzorus/rpm-rust-build:v1.0
  script:
   - cargo build --release
   - sed -i "s/PLACEHOLDER_FOR_VERSION/$DUX_VERSION/g" building/rpm/dux-worker.spec
   - cp building/rpm/dux-worker.spec ~/rpmbuild/SPECS
   - mkdir ~/rpmbuild/BUILDROOT/dux-worker-$DUX_VERSION-0.x86_64/
   - cp target/release/worker ~/rpmbuild/BUILD/dux-worker
   - cp building/conf/dux.conf.worker ~/rpmbuild/BUILD/dux.conf
   - rpmbuild -bb ~/rpmbuild/SPECS/dux-worker.spec
   - cp ~/rpmbuild/RPMS/x86_64/dux-worker-$DUX_VERSION-0.x86_64.rpm dux-worker-$DUX_VERSION.rpm
  artifacts:
    paths:
    - dux-worker-$DUX_VERSION.rpm

upload-to-package-registry:
  stage: deploy
  script:
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file building/deb/duxtool-$DUX_VERSION.deb "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/duxtool/$DUX_VERSION/duxtool-$DUX_VERSION.deb"'
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file duxtool-$DUX_VERSION.rpm "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/duxtool/$DUX_VERSION/duxtool-$DUX_VERSION.rpm"'
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file building/deb/dux-controller-$DUX_VERSION.deb "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/dux-controller/$DUX_VERSION/dux-controller-$DUX_VERSION.deb"'
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file dux-controller-$DUX_VERSION.rpm "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/dux-controller/$DUX_VERSION/dux-controller-$DUX_VERSION.rpm"'
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file building/deb/dux-worker-$DUX_VERSION.deb "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/dux-worker/$DUX_VERSION/dux-worker-$DUX_VERSION.deb"'
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file dux-worker-$DUX_VERSION.rpm "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/dux-worker/$DUX_VERSION/dux-worker-$DUX_VERSION.rpm"'
  rules:
   - if: $CI_COMMIT_BRANCH == "main"